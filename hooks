#!/usr/bin/env perl
use strict;
use warnings;
use GitHub::Tools::Common;
use Data::Dump;
use Carp;
use Net::HTTP::Spore;
use Try::Tiny;
use Text::SimpleTable::AutoWidth;

use feature ':5.10';
my $table = Text::SimpleTable::AutoWidth->new();
my $hooks = config 'hooks';

$table->captions(['Repo', keys %$hooks ]);
our $add = 0;
if ($ARGV[0]) {
    $add = 1;
}
my $g = api();

my $repos = $g->get_organization_repositories(format => 'json', org => 'startsiden')->body;
my $i = 0;
foreach my $r (sort { $a->{name} cmp $b->{name} } @{ $repos->{repositories}}) {
    my @row = ($r->{name});
    my @res = check_repo_hooks($g, $r, $hooks);
    foreach (@res) {
        if ($_ == 1) {
            push(@row, 'X');
        } elsif ($_ == 2) {
            push(@row, '+');
        } else {
            push(@row, ' ');
        }
    }

    $table->row(@row);
    #last if $i++ > 1;
}

say $table->draw();

sub check_repo_hooks {
    my ($api, $repo, $hooks) = @_;
    my @res;
    # Fetch the content first!
    my $url = $repo->{url} . "/admin";
    my $res = get($url);

    my @missing;
    foreach (values(%$hooks)) {
        if ($res->content =~ m|$_|) {
            push(@res, 1);
        } elsif ($add) {
            push(@res, 2);
            push(@missing, $_);
        } else {
            push(@res, 0);
        }
    }
    if (scalar(@missing) > 0) {
        my ($tok) = ($res->content =~ m|<input name="authenticity_token" type="hidden" value="(.*?)" />|);
        my $form = ['authenticity_token', $tok];
        foreach (values(%$hooks)) {
            push(@$form, "urls[]", $_);
        }

        my $res = post($url . '/postreceive_urls', $form);
        if ($res->is_success() || $res->is_redirect) {
            warn "added to " . $repo->{name};
        } else {
            die "Error adding post recieve_urls: " . $res->content;
        }
    }
    return @res;
}
