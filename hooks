#!/usr/bin/env perl
use strict;
use warnings;
use Github::Tools::Common;
use Data::Dump;
use Carp;
use Net::HTTP::Spore;
use Try::Tiny;
use Text::SimpleTable::AutoWidth;
use Scalar::Util;
use YAML::XS qw/DumpFile LoadFile/;

use feature ':5.10';
my $table = Text::SimpleTable::AutoWidth->new();
my $hooks = config 'hooks';
my $events = config 'events';

$table->captions(['Repo', keys %$hooks, 'IRC' ]);

my $g = api();

my $i = 0;

my $irc_rooms = LoadFile("ircrooms.yaml");

iterate_repos(config 'org', sub {
        my $r = shift;
        my @row = ($r->{name});

        say "REPO: " . $r->{name};
        my @res = check_repo_hooks($g, $r, $hooks);
        foreach (@res) {
            if ($_ == 1) {
                push(@row, 'X');
            } elsif ($_ == 2) {
                push(@row, '+');
            } else {
                push(@row, ' ');
            }
        }
        push(@row, $irc_rooms->{$r->{name}} || '');

        $table->row(@row);
        #last if $i++ > 1;
    }
);

say $table->draw();

DumpFile("ircrooms.yaml", $irc_rooms);

sub check_repo_hooks {
    my ($api, $repo, $hooks) = @_;
    my @res;
    # Fetch the content first!
    my $repo_hooks = $g->list_repo_hooks(user => config 'org', repo => $repo->{name})->body;

    $irc_rooms->{$repo->{name}} = '' unless $irc_rooms->{$repo->{name}};

    foreach my $hookname (keys(%$hooks)) {
        $_ = $hooks->{$hookname};
        say " $_" if $ENV{DEBUG};
        # Check if we have this one
        my ($seen, $ircseen);
        my $hook_events = $events->{$hookname} || [qw(push)];
        foreach my $h (@$repo_hooks) {
            if ($h->{name} eq 'web' and $h->{config}->{url} =~ qr/$_/) {
                say "    " . $h->{config}->{url} if $ENV{DEBUG};
                $seen = 1;
                # now lets check for events
                if (
                    scalar(@$hook_events)
                    and join(",", sort @{ $h->{events} }) ne join(",", sort @$hook_events)
                ) {
                    # Need to update this one.
                    say "      Events differ, lets update!";
                    $g->update_repo_hook(user => config 'org', repo => $repo->{name},
                        id => $h->{id},
                        spore_payload => {
                            name => 'web',
                            events => $hook_events,
                            config => {
                                url => $h->{config}->{url} . "?x-repo=" . $repo->{name},
                            },
                        }
                    );
                }
            } elsif ($h->{name} eq 'irc') {
                $ircseen++;
            }

        }
        unless ($seen) {
            # Need to add a hook then!
            say "    Adding hook: $_";
            $g->add_repo_hook(user => config 'org', repo => $repo->{name},
                spore_payload => {
                    name => 'web',
                    events => $hook_events,
                    config => {
                        url => $_ . "?x-repo=" . $repo->{name},
                    }
                }
            );
            $seen = 2;
        }
        if (not $ircseen and $irc_rooms->{$repo->{name}}) {
            say "    Adding IRC hook, since not added, but have channel name";
            $g->add_repo_hook(user => config 'org', repo => $repo->{name},
                spore_payload => {
                    name => 'irc',
                    config => {
                        room => $irc_rooms->{$repo->{name}},
                        nick => 'github_ss',
                        port => 6667,
                        server => "sausage.startsiden.no",
                        no_colors => 1,
                    },
                },
            );
        }
        push(@res, $seen);
    }
    return @res;
}


